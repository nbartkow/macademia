#summary Directions for installing Macademia.

= Accounts =
To be a member of the Poliwiki team, your email must be added to:
 * The Hudson integrated build server
 * Three sites:
    * This site (the Macademia google code site) for the development team
 * Two google groups:
    * [http://groups.google.com/group/poliwiki-dev Poliwiki Dev] - developer discussions between team members.
    * [http://groups.google.com/group/poliwiki-svn Poliwiki Svn] - subversion commit messages.

= Integrated Build =
We have set up a continuous integrated build server at http://poliwiki.macalester.edu:8080/hudson/.  The server checks out the codebase from svn, builds the codebase, and runs the unit tests.  If things go wrong, you will receive an email.

= Software Installation =
=== Install grails ===
  # Download the binary zip of grails 1.3.1 and open it up.  It should be in Downloads/grails-1.3.1. 
  # Add the following three lines to the ".profile" file in your home directory.  You may have to create the file if doesn't exist.  You can use any editor you would like, but make sure it is in "plain text" mode.  TextEdit ships with the Mac. 
 {{{
export GRAILS_HOME=~/Downloads/grails-1.3.1
export PATH=$PATH:$GRAILS_HOME/bin
export JAVA_HOME=/Library/Java/Home
}}}
You can check to make sure this worked properly by opening a terminal and typing echo $GRAILS_HOME.  You should see the information you entered.

=== Setup Intellij ===
  # Download and install Intellij.  You want the ultimate edition.
  # Start up IntelliJ.  You'll need to answer some configuration questions:
    # For now we'll use the evaluation license.
    # You only need to select the subversion VCS plugin.
    # Select all the Web / J2EE modules. 
    # Only select the tomcat and Resin app server plugins.
    # Leave all the HTML / Javascript plugins.
    # Leave all the "Other" plugins.

=== Check out Macademia ===
  # Check out Macademia from version control.
    # Open intellij and click "check out from version control."
    # The repositories tab will open.  Click the "+" to add the following repository: https://macademia.googlecode.com/svn/trunk
    # When the repository opens, it will show the address https://macademia.googlecode.com/svn/trunk
    # Click on the arrow to open the file, and you will see the "Macademia" folder; click on that and click checkout
    # You should checkout the project into a folder that ends with "/Macademia" (probably the second of three options)
  # Configure the project
    # After checking out will ask you if you want to create a grails application for the checked out files, click yes
    # Then click on import grails application from existing source
    # Then it will ask you to choose the Grails SDK, choose the grails folder in Users/yourname/Downloads/grails-1.3.1
    # Click to continue an create the project
  # Initialize the grails project:
    # run grails upgrade: tools > run grails target, type "upgrade" as the Command line.
    # You will have to click on the scrolling text in the console and type "y" to continue.
 


= Code Reviews =
The code review site is available at http://codereview.macalester.edu/.  Information and help available at http://code.google.com/p/rietveld/wiki/CodeReviewHelp

===The short description:===
 * Download the [http://codereview.macalester.edu/static/upload.py upload.py] script (it requires python-2.5)
 * Prepare some changes to check in to subversion
 * Make sure to "svn add" your files before executing the code review.  If you don't svn add a file before running upload.py, that file won't be included in the code review.  You can add the file (or directory) foo from the command line by running "svn add ./foo" from the containing directory.  If you forget to add the file, upload.py will warn you (we've just been ignoring the warnings :).
 * Initiate a code review by running
{{{
upload.py -s codereview.macalester.edu -r ssen@macalester.edu --send_mail --cc poliwiki-svn@googlegroups.com
}}}
 * You will be prompted for your macalester email address and password and a description of the change.
 * Shilad will review your change, and you'll receive an email when it's ready.
 * Commit your change *after* the code review is complete.

====Performing Code Reviews for Specific Files====
upload.py invokes svn diff.  In fact, you can append "--" to the command line (two dashes), followed by any svn diff arguments you would like.  For example, if you wanted to only diff the file (or directory) called foo, you could do:
{{{
upload.py -s codereview.macalester.edu -r ssen@macalester.edu --send_mail --cc poliwiki-svn@googlegroups.com -- ./foo
}}}
This can be particularly useful when you want to kick off a code review for a subset of your outstanding revisions.